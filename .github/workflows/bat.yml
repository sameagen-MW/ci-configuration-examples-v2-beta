# This is a basic workflow to help you get started with MATLAB Actions
name: Run MATLAB Tests

# Controls when the action will run.
on:
  # Triggers the workflow on push
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MATHWORKS_LICENSING_ENDPOINT: 'prod'

jobs:
  # This workflow contains a single job called "my-job"
  my-job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v4

      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: latest

      - name: Failing task example
        continue-on-error: true
        uses: matlab-actions/run-command@v2
        with:
          command: error("bam")
          

      # Runs a set of commands using the runners shell
      - name: Run tests and generate artifacts
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: src

      # As an alternative to run-tests, you can use run-command to execute a MATLAB script, function, or statement.
      #- name: Run all tests
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);
